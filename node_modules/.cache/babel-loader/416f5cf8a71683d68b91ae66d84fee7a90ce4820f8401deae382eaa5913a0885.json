{"ast":null,"code":"export const convertUrlToFile = async url => {\n  const response = await fetch(url);\n  const data = await response.blob();\n  const extend = url.split(\".\").pop();\n  const fileName = url.split(\"/\").pop();\n  const meta = {\n    type: `image/${extend}`\n  };\n  return new File([data], fileName, meta);\n};\nexport const convertUrlsToFile = async urls => {\n  const files = [];\n  for (const url of urls) {\n    const file = await convertUrlToFile(url);\n    files.push(file);\n  }\n  return files;\n};","map":{"version":3,"names":["convertUrlToFile","url","response","fetch","data","blob","extend","split","pop","fileName","meta","type","File","convertUrlsToFile","urls","files","file","push"],"sources":["C:/Users/임 승주/Downloads/Play-fit/PlayFitBoardFront/src/utils/index.ts"],"sourcesContent":["export const convertUrlToFile = async (url: string) => {\r\n  const response = await fetch(url);\r\n  const data = await response.blob();\r\n  const extend = url.split(\".\").pop();\r\n  const fileName = url.split(\"/\").pop();\r\n  const meta = { type: `image/${extend}` };\r\n\r\n  return new File([data], fileName as string, meta);\r\n};\r\n\r\nexport const convertUrlsToFile = async (urls: string[]) => {\r\n  const files: File[] = [];\r\n  for (const url of urls) {\r\n    const file = await convertUrlToFile(url);\r\n    files.push(file);\r\n  }\r\n  return files;\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAOC,GAAW,IAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,MAAMC,MAAM,GAAGL,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EACnC,MAAMC,QAAQ,GAAGR,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EACrC,MAAME,IAAI,GAAG;IAAEC,IAAI,EAAE,SAASL,MAAM;EAAG,CAAC;EAExC,OAAO,IAAIM,IAAI,CAAC,CAACR,IAAI,CAAC,EAAEK,QAAQ,EAAYC,IAAI,CAAC;AACnD,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAG,MAAOC,IAAc,IAAK;EACzD,MAAMC,KAAa,GAAG,EAAE;EACxB,KAAK,MAAMd,GAAG,IAAIa,IAAI,EAAE;IACtB,MAAME,IAAI,GAAG,MAAMhB,gBAAgB,CAACC,GAAG,CAAC;IACxCc,KAAK,CAACE,IAAI,CAACD,IAAI,CAAC;EAClB;EACA,OAAOD,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}