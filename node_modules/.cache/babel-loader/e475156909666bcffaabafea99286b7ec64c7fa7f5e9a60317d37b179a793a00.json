{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\board-front-master (1)\\\\jux\\\\PlayFitBoardFront\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s4 = $RefreshSig$();\nimport InputBox from \"components/InputBox\";\nimport \"./style.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { signInRequest, signUpRequest } from \"apis\";\nimport { useCookies } from \"react-cookie\";\nimport { MAIN_PATH } from \"constant\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDaumPostcodePopup } from \"react-daum-postcode\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// component : 인증 화면 컴포넌트 //\nexport default function Authentication() {\n  _s4();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  // state: 화면 상태 //\n  const [view, setView] = useState(\"sign-in\");\n  // state: 쿠키 상태 //\n  const [cookies, setCookie] = useCookies();\n\n  // function: 네비게이트 함수 //\n  const navigator = useNavigate();\n\n  // component : sign in card 컴포넌트 //\n  const SignInCard = () => {\n    _s();\n    // state: 이메일 요소 참조 상태 //\n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 //\n    const passwordRef = useRef(null);\n\n    // state: 이메일 상태 //\n    const [email, setEmail] = useState(\"\");\n    // state: 패스워드 상태 //\n    const [password, setPassword] = useState(\"\");\n    // state: 패스워드 타입 상태 //\n    const [passwordType, setPasswordType] = useState(\"password\");\n    // state: 패스워드 버튼 아이콘 상태 //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState(\"eye-light-off-icon\");\n    // state: 에러 상태 //\n    const [error, setError] = useState(false);\n\n    // function: sign in response 처리 함수 //\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert(\"네트워크 이상입니다.\");\n        return;\n      }\n      if (\"code\" in responseBody) {\n        const {\n          code\n        } = responseBody;\n        if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n        if (code === \"SF\" || code === \"VF\") setError(true);\n        if (code !== \"SU\") return;\n        const {\n          token,\n          expirationTime\n        } = responseBody;\n        const now = new Date().getTime();\n        const expires = new Date(now + expirationTime * 1000);\n        setCookie(\"accessToken\", token, {\n          expires,\n          path: MAIN_PATH()\n        });\n        navigator(MAIN_PATH());\n      } else {\n        alert(\"응답 형식이 올바르지 않습니다.\");\n      }\n    };\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    // event handler: 비밀번호 변경 이벤트 처리 //\n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    // event handler: 로그인 버튼 클릭 이벤트 처리  함수 //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n    // event handler: 회원가입 링크 클릭 이벤트 처리  함수 //\n    const onSignLinkClickHandler = () => {\n      setView(\"sign-up\");\n    };\n\n    // event handler: 패스워드 버튼 클릭 이벤트 처리  함수 //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === \"text\") {\n        setPasswordType(\"password\");\n        setPasswordButtonIcon(\"eye-light-off-icon\");\n      } else {\n        setPasswordType(\"text\");\n        setPasswordButtonIcon(\"eye-light-on-icon\");\n      }\n    };\n\n    // event handler: 이메일 인풋 키 다운 이벤트 처리  함수 //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리  함수 //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      onSignInButtonClickHandler();\n    };\n    const onFindIdPwLinkClickHandler = () => {\n      setView(\"find-id-pw\");\n    };\n\n    // render : sign in card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: \"로그인\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: \"이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: \"로그인\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: [\"신규 사용자이신가요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignLinkClickHandler,\n                children: \"회원가입\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-description\",\n                children: [\"아이디나 비밀번호를 잊으셨나요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"auth-description-link\",\n                  onClick: onFindIdPwLinkClickHandler,\n                  children: \"아이디/비밀번호 찾기\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  };\n\n  // component : sign up card 컴포넌트 //\n  _s(SignInCard, \"9I62EhHqQe1/cdr2r08/oYUs3Lc=\");\n  const SignUpCard = () => {\n    _s2();\n    // state: 이메일 요소 참조 상태 //\n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 //\n    const passwordRef = useRef(null);\n    // state: 패스워드 확인 요소 참조 상태 //\n    const passwordCheckRef = useRef(null);\n    // state: 닉네임 요소 참조 상태 //\n    const nicknameRef = useRef(null);\n    // state: 휴대폰 번호 요소 참조 상태 //\n    const telNumberRef = useRef(null);\n    // state: 주소 요소 참조 상태 //\n    const addressRef = useRef(null);\n    // state: 상세 주소 요소 참조 상태 //\n    const addressDetailRef = useRef(null);\n\n    // state: 페이지 번호 상태 //\n    const [page, setPage] = useState(1);\n    // state: 이메일 상태 //\n    const [email, setEmail] = useState(\"\");\n    // state: 패스워드 상태 //\n    const [password, setPassword] = useState(\"\");\n    // state: 패스워드 확인 상태 //\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\n    // state: 닉네임 상태 //\n    const [nickname, setNickname] = useState(\"\");\n    // state: 핸드폰 번호 상태 //\n    const [telNumber, setTelNumber] = useState(\"\");\n    // state: 주소 상태 //\n    const [address, setAddress] = useState(\"\");\n    // state: 상세 주소 상태 //\n    const [addressDetail, setAddressDetail] = useState(\"\");\n    // state: 개인 정보 동의 상태 //\n    const [agreedPersonal, setAgreedPersonal] = useState(false);\n\n    // state: 패스워드 타입 상태 //\n    const [passwordType, setPasswordType] = useState(\"password\");\n    // state: 패스워드 확인 타입 상태 //\n    const [passwordCheckType, setPasswordCheckType] = useState(\"password\");\n    const [isEmailError, setEmailError] = useState(false);\n    // state: 패스워드 에러 상태 //\n    const [isPasswordError, setPasswordError] = useState(false);\n    // state: 패스워드 확인 에러 상태 //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n    // state: 닉네임 에러 상태 //\n    const [isNicknameError, setNicknameError] = useState(false);\n    // state: 핸드폰 번호 에러 상태 //\n    const [isTelNumberError, setTelNumberError] = useState(false);\n    // state: 주소 에러 상태 //\n    const [isAddressError, setAddressError] = useState(false);\n    // state: 개인 정보 동의 에러 상태 //\n    const [isAgreedPersonalError, setAgreedPersonalError] = useState(false);\n    // state: 이메일 에러 메세지 상태 //\n    const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n    // state: 패스워드 에러 메세지 상태 //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n    // state: 패스워드 확인 에러 메세지 상태 //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState(\"\");\n    // state: 닉네임 에러 메세지 상태 //\n    const [nicknameErrorMessage, setNicknameErrorMessage] = useState(\"\");\n    // state: 핸드폰 번호 에러 메세지 상태 //\n    const [telNumberErrorMessage, setTelNumberErrorMessage] = useState(\"\");\n    // state: 주소 에러 메세지 상태 //\n    const [addressErrorMessage, setAddressErrorMessage] = useState(\"\");\n\n    // state: 패스워드 버튼 아이콘 상태 //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState(\"eye-light-off-icon\");\n    // state: 패스워드 확인 버튼 아이콘 상태 //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState(\"eye-light-off-icon\");\n\n    // function: 다음 주소 검색 팝업 오픈 함수 //\n    const open = useDaumPostcodePopup();\n    // function: sign up response 처리 함수 //\n    const signUpResponse = responseBody => {\n      if (!responseBody) {\n        alert(\"네트워크 이상입니다.\");\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === \"DE\") {\n        setEmailError(true);\n        setEmailErrorMessage(\"중복되는 이메일 주소입니다.\");\n      }\n      if (code === \"DN\") {\n        setNicknameError(true);\n        setNicknameErrorMessage(\"중복되는 닉네임입니다.\");\n      }\n      if (code === \"DT\") {\n        setTelNumberError(true);\n        setTelNumberErrorMessage(\"중복되는 핸드폰 번호입니다.\");\n      }\n      if (code === \"VF\") {\n        alert(\"모든 값을 입력하세요.\");\n      }\n      if (code === \"DBE\") {\n        alert(\"데이터베이스 오류입니다.\");\n      }\n      if (code !== \"SU\") return;\n      setView(\"sign-in\");\n    };\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n      setEmailError(false);\n      setEmailErrorMessage(\"\");\n    };\n\n    // event handler: 패스워드 변경 이벤트 처리 //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n      setPasswordError(false);\n      setPasswordErrorMessage(\"\");\n    };\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n      setPasswordCheckError(false);\n      setPasswordCheckErrorMessage(\"\");\n    };\n    // event handler: 닉네임 변경 이벤트 처리 //\n    const onNicknameChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setNickname(value);\n      setNicknameError(false);\n      setNicknameErrorMessage(\"\");\n    };\n    // event handler: 핸드폰 번호 변경 이벤트 처리 //\n    const onTelNumberChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setTelNumber(value);\n      setTelNumberError(false);\n      setTelNumberErrorMessage(\"\");\n    };\n    // event handler: 주소 변경 이벤트 처리 //\n    const onAddressChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddress(value);\n      setAddressError(false);\n      setAddressErrorMessage(\"\");\n    };\n    // event handler: 상세 주소 변경 이벤트 처리 //\n    const onAddressDetailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddressDetail(value);\n    };\n    // event handler: 개인 정보 동의 체크 박스 클릭 이벤트 처리 //\n    const onAgreedPersonalClickHandler = () => {\n      setAgreedPersonal(!agreedPersonal);\n      setAgreedPersonalError(false);\n    };\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === \"eye-light-off-icon\") {\n        setPasswordButtonIcon(\"eye-light-on-icon\");\n        setPasswordType(\"text\");\n      } else {\n        setPasswordButtonIcon(\"eye-light-off-icon\");\n        setPasswordType(\"password\");\n      }\n    };\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 //\n    const onPasswordCheckButtonClickHandler = () => {\n      if (passwordCheckButtonIcon === \"eye-light-off-icon\") {\n        setPasswordCheckButtonIcon(\"eye-light-on-icon\");\n        setPasswordCheckType(\"text\");\n      } else {\n        setPasswordCheckButtonIcon(\"eye-light-off-icon\");\n        setPasswordCheckType(\"password\");\n      }\n    };\n    // event handler: 주소 버튼 클릭 이벤트 처리 //\n    const onAddressButtonClickHandler = () => {\n      open({\n        onComplete\n      });\n    };\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n    // event handler: 회원가입 버튼 클릭 이벤트 처리 //\n    const onSignUpButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\n        setPage(1);\n        return;\n      }\n      const hasNickname = nickname.trim().length !== 0;\n      if (!hasNickname) {\n        setNicknameError(true);\n        setNicknameErrorMessage(\"닉네임을 입력해주세요.\");\n      }\n      const telNumberPattern = /^[0-9]{11,13}$/;\n      const isTelNumberPattern = telNumberPattern.test(telNumber);\n      if (!isTelNumberPattern) {\n        setTelNumberError(true);\n        setTelNumberErrorMessage(\"숫자만 입력해주세요.\");\n      }\n      const hasAddress = address.trim().length > 0;\n      if (!hasAddress) {\n        setAddressError(true);\n        setAddressErrorMessage(\"주소를 선택해주세요.\");\n      }\n      if (!agreedPersonal) setAgreedPersonalError(true);\n      if (!hasNickname || !isTelNumberPattern || !agreedPersonal) return;\n      const requestBody = {\n        email,\n        password,\n        nickname,\n        telNumber,\n        address,\n        addressDetail,\n        agreedPersonal\n      };\n      signUpRequest(requestBody).then(signUpResponse);\n    };\n    // event handler: 로그인 링크 클릭 이벤트 처리 //\n    const onSignInLinkClickHandler = () => {\n      setView(\"sign-in\");\n    };\n    // event handler: 이메일 키 다운 이벤트 처리 //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 키 다운 이벤트 처리 //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n    // event handler: 패스워드 확인 키 다운 이벤트 처리 //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      onNextButtonClickHandler();\n    };\n    // event handler: 닉네임 키 다운 이벤트 처리 //\n    const onNicknameKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!telNumberRef.current) return;\n      onNextButtonClickHandler();\n      telNumberRef.current.focus();\n    };\n    // event handler: 핸드폰 번호 키 다운 이벤트 처리 //\n    const onTelNumberKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      onAddressButtonClickHandler();\n    };\n    // event handler: 주소 키 다운 이벤트 처리 //\n    const onAddressKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!addressDetailRef.current) return;\n      addressDetailRef.current.focus();\n    };\n    // event handler: 상세 주소 키 다운 이벤트 처리 //\n    const onAddressDetailKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      onSignUpButtonClickHandler();\n    };\n\n    // event handler: 다음 주소 검색 완료 이벤트 처리 //\n    const onComplete = data => {\n      const {\n        address\n      } = data;\n      setAddress(address);\n      setAddressError(false);\n      setAddressErrorMessage(\"\");\n      if (!addressDetailRef.current) return;\n      addressDetailRef.current.focus();\n    };\n    // effect: 페이지가 변경될때마다 실행될 함수 //\n    useEffect(() => {\n      if (page === 2) {\n        if (!nicknameRef.current) return;\n        nicknameRef.current.focus();\n      }\n    }, [page]);\n    // render : sign up card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: \"회원가입\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), page === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: emailRef,\n              label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: email,\n              onChange: onEmailChangeHandler,\n              error: isEmailError,\n              message: emailErrorMessage,\n              onKeyDown: onEmailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n              type: passwordType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: password,\n              onChange: onPasswordChangeHandler,\n              error: isPasswordError,\n              message: passwordErrorMessage,\n              icon: passwordButtonIcon,\n              onButtonClick: onPasswordButtonClickHandler,\n              onKeyDown: onPasswordKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordCheckRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n              type: passwordCheckType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: passwordCheck,\n              onChange: onPasswordCheckChangeHandler,\n              error: isPasswordCheckError,\n              message: passwordCheckErrorMessage,\n              icon: passwordCheckButtonIcon,\n              onButtonClick: onPasswordCheckButtonClickHandler,\n              onKeyDown: onPasswordCheckKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: nicknameRef,\n              label: \"\\uB2C9\\uB124\\uC784*\",\n              type: \"text\",\n              placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: nickname,\n              onChange: onNicknameChangeHandler,\n              error: isNicknameError,\n              message: nicknameErrorMessage,\n              onKeyDown: onNicknameKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: telNumberRef,\n              label: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638*\",\n              type: \"text\",\n              placeholder: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: telNumber,\n              onChange: onTelNumberChangeHandler,\n              error: isTelNumberError,\n              message: telNumberErrorMessage,\n              onKeyDown: onTelNumberKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressRef,\n              label: \"\\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\",\n              value: address,\n              onChange: onAddressChangeHandler,\n              error: isAddressError,\n              message: addressErrorMessage,\n              icon: \"expand-right-light-icon\",\n              onButtonClick: onAddressButtonClickHandler,\n              onKeyDown: onAddressKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressDetailRef,\n              label: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\",\n              type: \"text\",\n              placeholder: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: addressDetail,\n              onChange: onAddressDetailChangeHandler,\n              error: false,\n              onKeyDown: onAddressDetailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: \"다음 단계\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-consent-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-check-box\",\n                onClick: onAgreedPersonalClickHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `icon ${agreedPersonal ? \"check-round-fill-icon\" : \"check-ring-light-icon\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isAgreedPersonalError ? \"auth-consent-title-error\" : \"auth-consent-title\",\n                children: \"개인정보동의\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-link\",\n                children: \"더보기 >\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"black-large-full-button\",\n              onClick: onSignUpButtonClickHandler,\n              children: \"회원가입\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: [\"이미 계정이 있으신가요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignInLinkClickHandler,\n                children: \"로그인\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(SignUpCard, \"AGwHQ3u14BmueV0aT7AaDONt+k4=\", false, function () {\n    return [useDaumPostcodePopup];\n  });\n  const FindIdPwCard = () => {\n    _s3();\n    const [activeTab, setActiveTab] = useState(\"find-id\");\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [verificationCodeId, setVerificationCodeId] = useState(\"\");\n    const [verificationCodePw, setVerificationCodePw] = useState(\"\");\n    const [showVerificationInputId, setShowVerificationInputId] = useState(false);\n    const [showVerificationInputPw, setShowVerificationInputPw] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [usernameError, setUsernameError] = useState(false);\n    const onSignInLinkClickHandler = () => {\n      setView(\"sign-in\");\n    };\n    const onSignLinkClickHandler = () => {\n      setView(\"sign-up\");\n    };\n    const handleFindIdSubmit = e => {\n      e.preventDefault();\n      setShowVerificationInputId(true);\n    };\n    const handleFindPwSubmit = e => {\n      e.preventDefault();\n      setShowVerificationInputPw(true);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"find-id-pw-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === \"find-id\" ? \"active\" : \"\"}`,\n          onClick: () => {\n            setActiveTab(\"find-id\");\n            setShowVerificationInputId(false);\n            setEmail(\"\");\n          },\n          children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === \"find-pw\" ? \"active\" : \"\"}`,\n          onClick: () => {\n            setActiveTab(\"find-pw\");\n            setShowVerificationInputPw(false);\n            setUsername(\"\");\n            setEmail(\"\");\n          },\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 9\n      }, this), activeTab === \"find-id\" && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"find-id-form\",\n        onSubmit: handleFindIdSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputBox, {\n          label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n          type: \"email\",\n          placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          error: emailError,\n          message: emailError ? \"이메일 주소를 입력하세요.\" : \"\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 13\n        }, this), showVerificationInputId && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(InputBox, {\n            label: \"\\uC778\\uC99D\\uBC88\\uD638\",\n            type: \"text\",\n            placeholder: \"\\uC778\\uC99D\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: verificationCodeId,\n            onChange: e => setVerificationCodeId(e.target.value),\n            error: false,\n            message: \"\",\n            id: \"verification-code-id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 11\n      }, this), activeTab === \"find-pw\" && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"find-pw-form\",\n        onSubmit: handleFindPwSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputBox, {\n          label: \"\\uC544\\uC774\\uB514\",\n          type: \"text\",\n          placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          error: usernameError,\n          message: usernameError ? \"아이디를 입력하세요.\" : \"\",\n          id: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n          label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n          type: \"email\",\n          placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          error: emailError,\n          message: emailError ? \"이메일 주소를 입력하세요.\" : \"\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this), showVerificationInputPw && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(InputBox, {\n            label: \"\\uC778\\uC99D\\uBC88\\uD638\",\n            type: \"text\",\n            placeholder: \"\\uC778\\uC99D\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: verificationCodePw,\n            onChange: e => setVerificationCodePw(e.target.value),\n            error: false,\n            message: \"\",\n            id: \"verification-code-pw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-description-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-description\",\n          children: [\"이미 계정이 있으신가요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"auth-description-link\",\n            onClick: onSignInLinkClickHandler,\n            children: \"로그인\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description\",\n            children: [\"계정이 존재하지 않으신가요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-description-link\",\n              onClick: onSignLinkClickHandler,\n              children: \"회원가입\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 7\n    }, this);\n  };\n\n  // render : 인증화면 컴포넌트 렌더링 //\n  _s3(FindIdPwCard, \"rm1cDHaS+N7fQshZJ+1F2HJk7yk=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: \"운동 커뮤니티\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: \"Play Fit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 9\n      }, this), view === \"sign-in\" && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 32\n      }, this), view === \"sign-up\" && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 32\n      }, this), view === \"find-id-pw\" && /*#__PURE__*/_jsxDEV(FindIdPwCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 866,\n    columnNumber: 5\n  }, this);\n}\n_s4(Authentication, \"euhi3nYfLo/Y//WG4GlhJ4mPI/8=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["InputBox","React","useState","useRef","useEffect","signInRequest","signUpRequest","useCookies","MAIN_PATH","useNavigate","useDaumPostcodePopup","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","_s4","_s","$RefreshSig$","_s2","_s3","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","onFindIdPwLinkClickHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","nicknameRef","telNumberRef","addressRef","addressDetailRef","page","setPage","passwordCheck","setPasswordCheck","nickname","setNickname","telNumber","setTelNumber","address","setAddress","addressDetail","setAddressDetail","agreedPersonal","setAgreedPersonal","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","isNicknameError","setNicknameError","isTelNumberError","setTelNumberError","isAddressError","setAddressError","isAgreedPersonalError","setAgreedPersonalError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","nicknameErrorMessage","setNicknameErrorMessage","telNumberErrorMessage","setTelNumberErrorMessage","addressErrorMessage","setAddressErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","open","signUpResponse","onPasswordCheckChangeHandler","onNicknameChangeHandler","onTelNumberChangeHandler","onAddressChangeHandler","onAddressDetailChangeHandler","onAgreedPersonalClickHandler","onPasswordCheckButtonClickHandler","onAddressButtonClickHandler","onComplete","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onSignUpButtonClickHandler","hasNickname","telNumberPattern","isTelNumberPattern","hasAddress","onSignInLinkClickHandler","onPasswordCheckKeyDownHandler","onNicknameKeyDownHandler","onTelNumberKeyDownHandler","onAddressKeyDownHandler","onAddressDetailKeyDownHandler","data","message","FindIdPwCard","activeTab","setActiveTab","username","setUsername","verificationCodeId","setVerificationCodeId","verificationCodePw","setVerificationCodePw","showVerificationInputId","setShowVerificationInputId","showVerificationInputPw","setShowVerificationInputPw","emailError","usernameError","setUsernameError","handleFindIdSubmit","e","preventDefault","handleFindPwSubmit","onSubmit","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/board-front-master (1)/jux/PlayFitBoardFront/src/views/Authentication/index.tsx"],"sourcesContent":["import InputBox from \"components/InputBox\";\r\nimport \"./style.css\";\r\nimport React, {\r\n  useState,\r\n  KeyboardEvent,\r\n  useRef,\r\n  ChangeEvent,\r\n  useEffect,\r\n} from \"react\";\r\nimport { SignInRequestDto, SignUpRequestDto } from \"apis/request/auth\";\r\nimport { signInRequest, signUpRequest } from \"apis\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport SignInResponseDto from \"apis/response/sign-in.response.dto\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { MAIN_PATH } from \"constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Address, useDaumPostcodePopup } from \"react-daum-postcode\";\r\nimport { SignUpResponseDto } from \"apis/response/auth\";\r\n\r\n// component : 인증 화면 컴포넌트 //\r\nexport default function Authentication() {\r\n  // state: 화면 상태 //\r\n  const [view, setView] = useState<\"sign-in\" | \"sign-up\" | \"find-id-pw\">(\r\n    \"sign-in\"\r\n  );\r\n  // state: 쿠키 상태 //\r\n  const [cookies, setCookie] = useCookies();\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigator = useNavigate();\r\n\r\n  // component : sign in card 컴포넌트 //\r\n  const SignInCard = () => {\r\n    // state: 이메일 요소 참조 상태 //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 요소 참조 상태 //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    // state: 이메일 상태 //\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    // state: 패스워드 상태 //\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    // state: 패스워드 타입 상태 //\r\n    const [passwordType, setPasswordType] = useState<\"text\" | \"password\">(\r\n      \"password\"\r\n    );\r\n    // state: 패스워드 버튼 아이콘 상태 //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n    // state: 에러 상태 //\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    // function: sign in response 처리 함수 //\r\n    const signInResponse = (\r\n      responseBody: SignInRequestDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) {\r\n        alert(\"네트워크 이상입니다.\");\r\n        return;\r\n      }\r\n      if (\"code\" in responseBody) {\r\n        const { code } = responseBody;\r\n        if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n        if (code === \"SF\" || code === \"VF\") setError(true);\r\n        if (code !== \"SU\") return;\r\n\r\n        const { token, expirationTime } = responseBody as SignInResponseDto;\r\n        const now = new Date().getTime();\r\n        const expires = new Date(now + expirationTime * 1000);\r\n\r\n        setCookie(\"accessToken\", token, { expires, path: MAIN_PATH() });\r\n        navigator(MAIN_PATH());\r\n      } else {\r\n        alert(\"응답 형식이 올바르지 않습니다.\");\r\n      }\r\n    };\r\n\r\n    // event handler: 이메일 변경 이벤트 처리 //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n    };\r\n\r\n    // event handler: 비밀번호 변경 이벤트 처리 //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n    };\r\n\r\n    // event handler: 로그인 버튼 클릭 이벤트 처리  함수 //\r\n    const onSignInButtonClickHandler = () => {\r\n      const requestBody: SignInRequestDto = {\r\n        email,\r\n        password,\r\n      };\r\n      signInRequest(requestBody).then(signInResponse);\r\n    };\r\n    // event handler: 회원가입 링크 클릭 이벤트 처리  함수 //\r\n    const onSignLinkClickHandler = () => {\r\n      setView(\"sign-up\");\r\n    };\r\n\r\n    // event handler: 패스워드 버튼 클릭 이벤트 처리  함수 //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordType === \"text\") {\r\n        setPasswordType(\"password\");\r\n        setPasswordButtonIcon(\"eye-light-off-icon\");\r\n      } else {\r\n        setPasswordType(\"text\");\r\n        setPasswordButtonIcon(\"eye-light-on-icon\");\r\n      }\r\n    };\r\n\r\n    // event handler: 이메일 인풋 키 다운 이벤트 처리  함수 //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리  함수 //\r\n    const onPasswordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onSignInButtonClickHandler();\r\n    };\r\n\r\n    const onFindIdPwLinkClickHandler = () => {\r\n      setView(\"find-id-pw\");\r\n    };\r\n\r\n    // render : sign in card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-card-box\">\r\n          <div className=\"auth-card-top\">\r\n            <div className=\"auth-card-title-box\">\r\n              <div className=\"auth-card-title\">{\"로그인\"}</div>\r\n            </div>\r\n            <InputBox\r\n              ref={emailRef}\r\n              label=\"이메일 주소\"\r\n              type=\"text\"\r\n              placeholder=\"이메일 주소를 입력해주세요.\"\r\n              error={error}\r\n              value={email}\r\n              onChange={onEmailChangeHandler}\r\n              onKeyDown={onEmailKeyDownHandler}\r\n            />\r\n            <InputBox\r\n              ref={passwordRef}\r\n              label=\"비밀번호\"\r\n              type={passwordType}\r\n              placeholder=\"비밀번호를 입력해주세요.\"\r\n              error={error}\r\n              value={password}\r\n              onChange={onPasswordChangeHandler}\r\n              icon={passwordButtonIcon}\r\n              onButtonClick={onPasswordButtonClickHandler}\r\n              onKeyDown={onPasswordKeyDownHandler}\r\n            />\r\n          </div>\r\n          <div className=\"auth-card-bottom\">\r\n            {error && (\r\n              <div className=\"auth-sign-in-error-box\">\r\n                <div className=\"auth-sign-in-error-message\">\r\n                  {\r\n                    \"이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.\"\r\n                  }\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div\r\n              className=\"black-large-full-button\"\r\n              onClick={onSignInButtonClickHandler}\r\n            >\r\n              {\"로그인\"}\r\n            </div>\r\n            <div className=\"auth-description-box\">\r\n              <div className=\"auth-description\">\r\n                {\"신규 사용자이신가요? \"}\r\n                <span\r\n                  className=\"auth-description-link\"\r\n                  onClick={onSignLinkClickHandler}\r\n                >\r\n                  {\"회원가입\"}\r\n                </span>\r\n                <div className=\"auth-description\">\r\n                  {\"아이디나 비밀번호를 잊으셨나요? \"}\r\n                  <span\r\n                    className=\"auth-description-link\"\r\n                    onClick={onFindIdPwLinkClickHandler}\r\n                  >\r\n                    {\"아이디/비밀번호 찾기\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component : sign up card 컴포넌트 //\r\n  const SignUpCard = () => {\r\n    // state: 이메일 요소 참조 상태 //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 요소 참조 상태 //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 확인 요소 참조 상태 //\r\n    const passwordCheckRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 닉네임 요소 참조 상태 //\r\n    const nicknameRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 휴대폰 번호 요소 참조 상태 //\r\n    const telNumberRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 주소 요소 참조 상태 //\r\n    const addressRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 상세 주소 요소 참조 상태 //\r\n    const addressDetailRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    // state: 페이지 번호 상태 //\r\n    const [page, setPage] = useState<1 | 2>(1);\r\n    // state: 이메일 상태 //\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    // state: 패스워드 상태 //\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    // state: 패스워드 확인 상태 //\r\n    const [passwordCheck, setPasswordCheck] = useState<string>(\"\");\r\n    // state: 닉네임 상태 //\r\n    const [nickname, setNickname] = useState<string>(\"\");\r\n    // state: 핸드폰 번호 상태 //\r\n    const [telNumber, setTelNumber] = useState<string>(\"\");\r\n    // state: 주소 상태 //\r\n    const [address, setAddress] = useState<string>(\"\");\r\n    // state: 상세 주소 상태 //\r\n    const [addressDetail, setAddressDetail] = useState<string>(\"\");\r\n    // state: 개인 정보 동의 상태 //\r\n    const [agreedPersonal, setAgreedPersonal] = useState<boolean>(false);\r\n\r\n    // state: 패스워드 타입 상태 //\r\n    const [passwordType, setPasswordType] = useState<\"text\" | \"password\">(\r\n      \"password\"\r\n    );\r\n    // state: 패스워드 확인 타입 상태 //\r\n    const [passwordCheckType, setPasswordCheckType] = useState<\r\n      \"text\" | \"password\"\r\n    >(\"password\");\r\n    const [isEmailError, setEmailError] = useState<boolean>(false);\r\n    // state: 패스워드 에러 상태 //\r\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\r\n    // state: 패스워드 확인 에러 상태 //\r\n    const [isPasswordCheckError, setPasswordCheckError] =\r\n      useState<boolean>(false);\r\n    // state: 닉네임 에러 상태 //\r\n    const [isNicknameError, setNicknameError] = useState<boolean>(false);\r\n    // state: 핸드폰 번호 에러 상태 //\r\n    const [isTelNumberError, setTelNumberError] = useState<boolean>(false);\r\n    // state: 주소 에러 상태 //\r\n    const [isAddressError, setAddressError] = useState<boolean>(false);\r\n    // state: 개인 정보 동의 에러 상태 //\r\n    const [isAgreedPersonalError, setAgreedPersonalError] =\r\n      useState<boolean>(false);\r\n    // state: 이메일 에러 메세지 상태 //\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>(\"\");\r\n    // state: 패스워드 에러 메세지 상태 //\r\n    const [passwordErrorMessage, setPasswordErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 패스워드 확인 에러 메세지 상태 //\r\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 닉네임 에러 메세지 상태 //\r\n    const [nicknameErrorMessage, setNicknameErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 핸드폰 번호 에러 메세지 상태 //\r\n    const [telNumberErrorMessage, setTelNumberErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 주소 에러 메세지 상태 //\r\n    const [addressErrorMessage, setAddressErrorMessage] = useState<string>(\"\");\r\n\r\n    // state: 패스워드 버튼 아이콘 상태 //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n    // state: 패스워드 확인 버튼 아이콘 상태 //\r\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n\r\n    // function: 다음 주소 검색 팝업 오픈 함수 //\r\n    const open = useDaumPostcodePopup();\r\n    // function: sign up response 처리 함수 //\r\n    const signUpResponse = (\r\n      responseBody: SignUpResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) {\r\n        alert(\"네트워크 이상입니다.\");\r\n        return;\r\n      }\r\n      const { code } = responseBody;\r\n      if (code === \"DE\") {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"중복되는 이메일 주소입니다.\");\r\n      }\r\n      if (code === \"DN\") {\r\n        setNicknameError(true);\r\n        setNicknameErrorMessage(\"중복되는 닉네임입니다.\");\r\n      }\r\n      if (code === \"DT\") {\r\n        setTelNumberError(true);\r\n        setTelNumberErrorMessage(\"중복되는 핸드폰 번호입니다.\");\r\n      }\r\n      if (code === \"VF\") {\r\n        alert(\"모든 값을 입력하세요.\");\r\n      }\r\n      if (code === \"DBE\") {\r\n        alert(\"데이터베이스 오류입니다.\");\r\n      }\r\n      if (code !== \"SU\") return;\r\n\r\n      setView(\"sign-in\");\r\n    };\r\n    // event handler: 이메일 변경 이벤트 처리 //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n      setEmailError(false);\r\n      setEmailErrorMessage(\"\");\r\n    };\r\n\r\n    // event handler: 패스워드 변경 이벤트 처리 //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage(\"\");\r\n    };\r\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\r\n    const onPasswordCheckChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const { value } = event.target;\r\n      setPasswordCheck(value);\r\n      setPasswordCheckError(false);\r\n      setPasswordCheckErrorMessage(\"\");\r\n    };\r\n    // event handler: 닉네임 변경 이벤트 처리 //\r\n    const onNicknameChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setNickname(value);\r\n      setNicknameError(false);\r\n      setNicknameErrorMessage(\"\");\r\n    };\r\n    // event handler: 핸드폰 번호 변경 이벤트 처리 //\r\n    const onTelNumberChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setTelNumber(value);\r\n      setTelNumberError(false);\r\n      setTelNumberErrorMessage(\"\");\r\n    };\r\n    // event handler: 주소 변경 이벤트 처리 //\r\n    const onAddressChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setAddress(value);\r\n      setAddressError(false);\r\n      setAddressErrorMessage(\"\");\r\n    };\r\n    // event handler: 상세 주소 변경 이벤트 처리 //\r\n    const onAddressDetailChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const { value } = event.target;\r\n      setAddressDetail(value);\r\n    };\r\n    // event handler: 개인 정보 동의 체크 박스 클릭 이벤트 처리 //\r\n    const onAgreedPersonalClickHandler = () => {\r\n      setAgreedPersonal(!agreedPersonal);\r\n      setAgreedPersonalError(false);\r\n    };\r\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordButtonIcon === \"eye-light-off-icon\") {\r\n        setPasswordButtonIcon(\"eye-light-on-icon\");\r\n        setPasswordType(\"text\");\r\n      } else {\r\n        setPasswordButtonIcon(\"eye-light-off-icon\");\r\n        setPasswordType(\"password\");\r\n      }\r\n    };\r\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 //\r\n    const onPasswordCheckButtonClickHandler = () => {\r\n      if (passwordCheckButtonIcon === \"eye-light-off-icon\") {\r\n        setPasswordCheckButtonIcon(\"eye-light-on-icon\");\r\n        setPasswordCheckType(\"text\");\r\n      } else {\r\n        setPasswordCheckButtonIcon(\"eye-light-off-icon\");\r\n        setPasswordCheckType(\"password\");\r\n      }\r\n    };\r\n    // event handler: 주소 버튼 클릭 이벤트 처리 //\r\n    const onAddressButtonClickHandler = () => {\r\n      open({ onComplete });\r\n    };\r\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 //\r\n    const onNextButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\r\n      }\r\n      const isCheckedPassword = password.trim().length >= 8;\r\n      if (!isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (!isEqualPassword) {\r\n        setPasswordCheckError(true);\r\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\r\n      setPage(2);\r\n    };\r\n    // event handler: 회원가입 버튼 클릭 이벤트 처리 //\r\n    const onSignUpButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\r\n      }\r\n      const isCheckedPassword = password.trim().length >= 8;\r\n      if (!isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (!isEqualPassword) {\r\n        setPasswordCheckError(true);\r\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\r\n        setPage(1);\r\n        return;\r\n      }\r\n      const hasNickname = nickname.trim().length !== 0;\r\n      if (!hasNickname) {\r\n        setNicknameError(true);\r\n        setNicknameErrorMessage(\"닉네임을 입력해주세요.\");\r\n      }\r\n      const telNumberPattern = /^[0-9]{11,13}$/;\r\n      const isTelNumberPattern = telNumberPattern.test(telNumber);\r\n      if (!isTelNumberPattern) {\r\n        setTelNumberError(true);\r\n        setTelNumberErrorMessage(\"숫자만 입력해주세요.\");\r\n      }\r\n      const hasAddress = address.trim().length > 0;\r\n      if (!hasAddress) {\r\n        setAddressError(true);\r\n        setAddressErrorMessage(\"주소를 선택해주세요.\");\r\n      }\r\n      if (!agreedPersonal) setAgreedPersonalError(true);\r\n\r\n      if (!hasNickname || !isTelNumberPattern || !agreedPersonal) return;\r\n\r\n      const requestBody: SignUpRequestDto = {\r\n        email,\r\n        password,\r\n        nickname,\r\n        telNumber,\r\n        address,\r\n        addressDetail,\r\n        agreedPersonal,\r\n      };\r\n\r\n      signUpRequest(requestBody).then(signUpResponse);\r\n    };\r\n    // event handler: 로그인 링크 클릭 이벤트 처리 //\r\n    const onSignInLinkClickHandler = () => {\r\n      setView(\"sign-in\");\r\n    };\r\n    // event handler: 이메일 키 다운 이벤트 처리 //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 키 다운 이벤트 처리 //\r\n    const onPasswordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordCheckRef.current) return;\r\n      passwordCheckRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 확인 키 다운 이벤트 처리 //\r\n    const onPasswordCheckKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onNextButtonClickHandler();\r\n    };\r\n    // event handler: 닉네임 키 다운 이벤트 처리 //\r\n    const onNicknameKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!telNumberRef.current) return;\r\n      onNextButtonClickHandler();\r\n      telNumberRef.current.focus();\r\n    };\r\n    // event handler: 핸드폰 번호 키 다운 이벤트 처리 //\r\n    const onTelNumberKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onAddressButtonClickHandler();\r\n    };\r\n    // event handler: 주소 키 다운 이벤트 처리 //\r\n    const onAddressKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus();\r\n    };\r\n    // event handler: 상세 주소 키 다운 이벤트 처리 //\r\n    const onAddressDetailKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onSignUpButtonClickHandler();\r\n    };\r\n\r\n    // event handler: 다음 주소 검색 완료 이벤트 처리 //\r\n    const onComplete = (data: Address) => {\r\n      const { address } = data;\r\n      setAddress(address);\r\n      setAddressError(false);\r\n      setAddressErrorMessage(\"\");\r\n      if (!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus();\r\n    };\r\n    // effect: 페이지가 변경될때마다 실행될 함수 //\r\n    useEffect(() => {\r\n      if (page === 2) {\r\n        if (!nicknameRef.current) return;\r\n        nicknameRef.current.focus();\r\n      }\r\n    }, [page]);\r\n    // render : sign up card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-card-box\">\r\n          <div className=\"auth-card-top\">\r\n            <div className=\"auth-card-title-box\">\r\n              <div className=\"auth-card-title\">{\"회원가입\"}</div>\r\n              <div className=\"auth-card-page\">{`${page}/2`}</div>\r\n            </div>\r\n            {page === 1 && (\r\n              <>\r\n                <InputBox\r\n                  ref={emailRef}\r\n                  label=\"이메일 주소*\"\r\n                  type=\"text\"\r\n                  placeholder=\"이메일 주소를 입력해주세요.\"\r\n                  value={email}\r\n                  onChange={onEmailChangeHandler}\r\n                  error={isEmailError}\r\n                  message={emailErrorMessage}\r\n                  onKeyDown={onEmailKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={passwordRef}\r\n                  label=\"비밀번호*\"\r\n                  type={passwordType}\r\n                  placeholder=\"비밀번호를 입력해주세요.\"\r\n                  value={password}\r\n                  onChange={onPasswordChangeHandler}\r\n                  error={isPasswordError}\r\n                  message={passwordErrorMessage}\r\n                  icon={passwordButtonIcon}\r\n                  onButtonClick={onPasswordButtonClickHandler}\r\n                  onKeyDown={onPasswordKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={passwordCheckRef}\r\n                  label=\"비밀번호 확인*\"\r\n                  type={passwordCheckType}\r\n                  placeholder=\"비밀번호를 다시 입력해주세요.\"\r\n                  value={passwordCheck}\r\n                  onChange={onPasswordCheckChangeHandler}\r\n                  error={isPasswordCheckError}\r\n                  message={passwordCheckErrorMessage}\r\n                  icon={passwordCheckButtonIcon}\r\n                  onButtonClick={onPasswordCheckButtonClickHandler}\r\n                  onKeyDown={onPasswordCheckKeyDownHandler}\r\n                />\r\n              </>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n                <InputBox\r\n                  ref={nicknameRef}\r\n                  label=\"닉네임*\"\r\n                  type=\"text\"\r\n                  placeholder=\"닉네임을 입력해주세요.\"\r\n                  value={nickname}\r\n                  onChange={onNicknameChangeHandler}\r\n                  error={isNicknameError}\r\n                  message={nicknameErrorMessage}\r\n                  onKeyDown={onNicknameKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={telNumberRef}\r\n                  label=\"핸드폰 번호*\"\r\n                  type=\"text\"\r\n                  placeholder=\"핸드폰 번호를 입력해주세요.\"\r\n                  value={telNumber}\r\n                  onChange={onTelNumberChangeHandler}\r\n                  error={isTelNumberError}\r\n                  message={telNumberErrorMessage}\r\n                  onKeyDown={onTelNumberKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={addressRef}\r\n                  label=\"주소*\"\r\n                  type=\"text\"\r\n                  placeholder=\"우편번호 찾기\"\r\n                  value={address}\r\n                  onChange={onAddressChangeHandler}\r\n                  error={isAddressError}\r\n                  message={addressErrorMessage}\r\n                  icon=\"expand-right-light-icon\"\r\n                  onButtonClick={onAddressButtonClickHandler}\r\n                  onKeyDown={onAddressKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={addressDetailRef}\r\n                  label=\"상세 주소\"\r\n                  type=\"text\"\r\n                  placeholder=\"상세 주소를 입력해주세요.\"\r\n                  value={addressDetail}\r\n                  onChange={onAddressDetailChangeHandler}\r\n                  error={false}\r\n                  onKeyDown={onAddressDetailKeyDownHandler}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"auth-card-bottom\">\r\n            {page === 1 && (\r\n              <div\r\n                className=\"black-large-full-button\"\r\n                onClick={onNextButtonClickHandler}\r\n              >\r\n                {\"다음 단계\"}\r\n              </div>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n                <div className=\"auth-consent-box\">\r\n                  <div\r\n                    className=\"auth-check-box\"\r\n                    onClick={onAgreedPersonalClickHandler}\r\n                  >\r\n                    <div\r\n                      className={`icon ${agreedPersonal\r\n                          ? \"check-round-fill-icon\"\r\n                          : \"check-ring-light-icon\"\r\n                        }`}\r\n                    ></div>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      isAgreedPersonalError\r\n                        ? \"auth-consent-title-error\"\r\n                        : \"auth-consent-title\"\r\n                    }\r\n                  >\r\n                    {\"개인정보동의\"}\r\n                  </div>\r\n                  <div className=\"auth-consent-link\">{\"더보기 >\"}</div>\r\n                </div>\r\n                <div\r\n                  className=\"black-large-full-button\"\r\n                  onClick={onSignUpButtonClickHandler}\r\n                >\r\n                  {\"회원가입\"}\r\n                </div>\r\n              </>\r\n            )}\r\n            <div className=\"auth-description-box\">\r\n              <div className=\"auth-description\">\r\n                {\"이미 계정이 있으신가요? \"}\r\n                <span\r\n                  className=\"auth-description-link\"\r\n                  onClick={onSignInLinkClickHandler}\r\n                >\r\n                  {\"로그인\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const FindIdPwCard = () => {\r\n    const [activeTab, setActiveTab] = useState<\"find-id\" | \"find-pw\">(\r\n      \"find-id\"\r\n    );\r\n    const [email, setEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [verificationCodeId, setVerificationCodeId] = useState(\"\");\r\n    const [verificationCodePw, setVerificationCodePw] = useState(\"\");\r\n    const [showVerificationInputId, setShowVerificationInputId] =\r\n      useState(false);\r\n    const [showVerificationInputPw, setShowVerificationInputPw] =\r\n      useState(false);\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [usernameError, setUsernameError] = useState(false);\r\n\r\n    const onSignInLinkClickHandler = () => {\r\n      setView(\"sign-in\");\r\n    };\r\n\r\n    const onSignLinkClickHandler = () => {\r\n      setView(\"sign-up\");\r\n    };\r\n\r\n    const handleFindIdSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      setShowVerificationInputId(true);\r\n    };\r\n\r\n    const handleFindPwSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      setShowVerificationInputPw(true);\r\n    };\r\n\r\n    return (\r\n      <div className=\"find-id-pw-card\">\r\n        <div className=\"tab-buttons\">\r\n          <button\r\n            className={`tab-button ${activeTab === \"find-id\" ? \"active\" : \"\"}`}\r\n            onClick={() => {\r\n              setActiveTab(\"find-id\");\r\n              setShowVerificationInputId(false);\r\n              setEmail(\"\");\r\n            }}\r\n          >\r\n            아이디 찾기\r\n          </button>\r\n          <button\r\n            className={`tab-button ${activeTab === \"find-pw\" ? \"active\" : \"\"}`}\r\n            onClick={() => {\r\n              setActiveTab(\"find-pw\");\r\n              setShowVerificationInputPw(false);\r\n              setUsername(\"\");\r\n              setEmail(\"\");\r\n            }}\r\n          >\r\n            비밀번호 찾기\r\n          </button>\r\n        </div>\r\n        {activeTab === \"find-id\" && (\r\n          <form className=\"find-id-form\" onSubmit={handleFindIdSubmit}>\r\n            <InputBox\r\n              label=\"이메일 주소\"\r\n              type=\"email\"\r\n              placeholder=\"이메일 주소를 입력하세요\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              error={emailError}\r\n              message={emailError ? \"이메일 주소를 입력하세요.\" : \"\"}\r\n              id=\"email\"\r\n            />\r\n            {showVerificationInputId && (\r\n              <div>\r\n                <InputBox\r\n                  label=\"인증번호\"\r\n                  type=\"text\"\r\n                  placeholder=\"인증번호를 입력하세요\"\r\n                  value={verificationCodeId}\r\n                  onChange={(e) => setVerificationCodeId(e.target.value)}\r\n                  error={false}\r\n                  message=\"\"\r\n                  id=\"verification-code-id\"\r\n                />\r\n              </div>\r\n            )}\r\n            <button type=\"submit\">아이디 찾기</button>\r\n          </form>\r\n        )}\r\n        {activeTab === \"find-pw\" && (\r\n          <form className=\"find-pw-form\" onSubmit={handleFindPwSubmit}>\r\n            <InputBox\r\n              label=\"아이디\"\r\n              type=\"text\"\r\n              placeholder=\"아이디를 입력하세요\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              error={usernameError}\r\n              message={usernameError ? \"아이디를 입력하세요.\" : \"\"}\r\n              id=\"username\"\r\n            />\r\n            <InputBox\r\n              label=\"이메일 주소\"\r\n              type=\"email\"\r\n              placeholder=\"이메일 주소를 입력하세요\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              error={emailError}\r\n              message={emailError ? \"이메일 주소를 입력하세요.\" : \"\"}\r\n              id=\"email\"\r\n            />\r\n            {showVerificationInputPw && (\r\n              <div>\r\n                <InputBox\r\n                  label=\"인증번호\"\r\n                  type=\"text\"\r\n                  placeholder=\"인증번호를 입력하세요\"\r\n                  value={verificationCodePw}\r\n                  onChange={(e) => setVerificationCodePw(e.target.value)}\r\n                  error={false}\r\n                  message=\"\"\r\n                  id=\"verification-code-pw\"\r\n                />\r\n              </div>\r\n            )}\r\n            <button type=\"submit\">비밀번호 찾기</button>\r\n          </form>\r\n        )}\r\n        <div className=\"auth-description-box\">\r\n          <div className=\"auth-description\">\r\n            {\"이미 계정이 있으신가요? \"}\r\n            <span\r\n              className=\"auth-description-link\"\r\n              onClick={onSignInLinkClickHandler}\r\n            >\r\n              {\"로그인\"}\r\n            </span>\r\n            <div className=\"auth-description\">\r\n              {\"계정이 존재하지 않으신가요? \"}\r\n              <span\r\n                className=\"auth-description-link\"\r\n                onClick={onSignLinkClickHandler}\r\n              >\r\n                {\"회원가입\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // render : 인증화면 컴포넌트 렌더링 //\r\n  return (\r\n    <div id=\"auth-wrapper\">\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-jumbotron-box\">\r\n          <div className=\"auth-jumbotron-contents\">\r\n            <div className=\"auth-logo-icon\"></div>\r\n            <div className=\"auth-jumbotron-text-box\">\r\n              <div className=\"auth-jumbotron-text\">{\"운동 커뮤니티\"}</div>\r\n              <div className=\"auth-jumbotron-text\">{\"Play Fit\"}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {view === \"sign-in\" && <SignInCard />}\r\n        {view === \"sign-up\" && <SignUpCard />}\r\n        {view === \"find-id-pw\" && <FindIdPwCard />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}