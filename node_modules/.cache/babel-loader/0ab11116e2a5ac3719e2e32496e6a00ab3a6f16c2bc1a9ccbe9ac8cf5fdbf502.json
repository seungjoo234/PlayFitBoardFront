{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC784 \\uC2B9\\uC8FC\\\\Downloads\\\\Play-fit\\\\PlayFitBoardFront\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Main from \"views/Main\";\nimport Authentication from \"views/Authentication\";\nimport Search from \"views/Search\";\nimport UserP from \"views/User\";\nimport BoardWrite from \"views/Board/Write\";\nimport BoardUpdate from \"views/Board/Update\";\nimport BoardDetail from \"views/Board/Detail\";\nimport Container from \"layouts/Container\";\nimport { AUTH_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from \"constant\";\nimport { useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useLoginUserStore } from \"stores\";\nimport { getSignInUserRequest } from \"apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// component: Application 컴포넌트 //\nfunction App() {\n  _s();\n  // state: 로그인 유저 전역 상태 //\n  const {\n    setLoginUser,\n    resetLoginUser\n  } = useLoginUserStore();\n  // state: cookie 상태 //\n  const [cookies, setCookie] = useCookies();\n\n  // function: get sign in user response 처리 함수 //\n  const getSignInUserResponse = responseBody => {\n    if (!responseBody) return;\n    const {\n      code\n    } = responseBody;\n    if (code === \"AF\" || code === \"NU\" || code === \"DBE\") {\n      resetLoginUser();\n      return;\n    }\n    const loginUser = {\n      ...responseBody\n    };\n    setLoginUser(loginUser);\n  };\n\n  // effect: accessToken cookie 값이 변경될 때 마다 실행할 함수 //\n  useEffect(() => {\n    if (!cookies.accessToken) {\n      resetLoginUser();\n      return;\n    }\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);\n  }, [cookies.accessToken]);\n\n  // render: Application 컴포넌트 렌더링 //\n  // description: 메인 화면 : '/' - Main //\n  // description: 로그인 + 회원가입 화면 : '/auth' -Authentication //\n  // description: 검색 화면 : '/search/:searchword' - Search //\n  // description: 유저 페이지 : '/user/:userEmail' - User //\n  // description: 게시물 상세보기 : '/board/detail/:boardNumber' - BoardDetail //\n  // description: 게시물 작성하기 : '/board/write' - BoardWrite //\n  // description: 게시물 수정하기 : '/board/update/:boardNumber' - BoardUpdate //\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: MAIN_PATH(),\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AUTH_PATH(),\n        element: /*#__PURE__*/_jsxDEV(Authentication, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: SEARCH_PATH(\":searchWord\"),\n        element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: USER_PATH(\":userEmail\"),\n        element: /*#__PURE__*/_jsxDEV(UserP, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/board\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"write\",\n          element: /*#__PURE__*/_jsxDEV(BoardWrite, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"detail/:boardNumber\",\n          element: /*#__PURE__*/_jsxDEV(BoardDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"update/:boardNumber\",\n          element: /*#__PURE__*/_jsxDEV(BoardUpdate, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"404 Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ckPwLfJ6iltiWl3sb/Eherv0LKY=\", false, function () {\n  return [useLoginUserStore, useCookies];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","Main","Authentication","Search","UserP","BoardWrite","BoardUpdate","BoardDetail","Container","AUTH_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useEffect","useCookies","useLoginUserStore","getSignInUserRequest","jsxDEV","_jsxDEV","App","_s","setLoginUser","resetLoginUser","cookies","setCookie","getSignInUserResponse","responseBody","code","loginUser","accessToken","then","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["C:/Users/임 승주/Downloads/Play-fit/PlayFitBoardFront/src/App.tsx"],"sourcesContent":["import \"./App.css\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport Main from \"views/Main\";\r\nimport Authentication from \"views/Authentication\";\r\nimport Search from \"views/Search\";\r\nimport UserP from \"views/User\";\r\nimport BoardWrite from \"views/Board/Write\";\r\nimport BoardUpdate from \"views/Board/Update\";\r\nimport BoardDetail from \"views/Board/Detail\";\r\nimport Container from \"layouts/Container\";\r\nimport {\r\n  AUTH_PATH,\r\n  BOARD_DETAIL_PATH,\r\n  BOARD_PATH,\r\n  BOARD_UPDATE_PATH,\r\n  BOARD_WRITE_PATH,\r\n  MAIN_PATH,\r\n  SEARCH_PATH,\r\n  USER_PATH,\r\n  LIFE_PATH,\r\n  HEALTH_PATH,\r\n  FILA_PATH,\r\n  SPORTS_PATH,\r\n} from \"constant\";\r\nimport { useEffect } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useLoginUserStore } from \"stores\";\r\nimport { getSignInUserRequest } from \"apis\";\r\nimport { GetSignInUserResponseDto } from \"apis/response/user\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport { User } from \"types/interface\";\r\n\r\n// component: Application 컴포넌트 //\r\nfunction App() {\r\n  // state: 로그인 유저 전역 상태 //\r\n  const { setLoginUser, resetLoginUser } = useLoginUserStore();\r\n  // state: cookie 상태 //\r\n  const [cookies, setCookie] = useCookies();\r\n\r\n  // function: get sign in user response 처리 함수 //\r\n  const getSignInUserResponse = (\r\n    responseBody: GetSignInUserResponseDto | ResponseDto | null\r\n  ) => {\r\n    if (!responseBody) return;\r\n    const { code } = responseBody;\r\n    if (code === \"AF\" || code === \"NU\" || code === \"DBE\") {\r\n      resetLoginUser();\r\n      return;\r\n    }\r\n    const loginUser: User = { ...(responseBody as GetSignInUserResponseDto) };\r\n    setLoginUser(loginUser);\r\n  };\r\n\r\n  // effect: accessToken cookie 값이 변경될 때 마다 실행할 함수 //\r\n  useEffect(() => {\r\n    if (!cookies.accessToken) {\r\n      resetLoginUser();\r\n      return;\r\n    }\r\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);\r\n  }, [cookies.accessToken]);\r\n\r\n  // render: Application 컴포넌트 렌더링 //\r\n  // description: 메인 화면 : '/' - Main //\r\n  // description: 로그인 + 회원가입 화면 : '/auth' -Authentication //\r\n  // description: 검색 화면 : '/search/:searchword' - Search //\r\n  // description: 유저 페이지 : '/user/:userEmail' - User //\r\n  // description: 게시물 상세보기 : '/board/detail/:boardNumber' - BoardDetail //\r\n  // description: 게시물 작성하기 : '/board/write' - BoardWrite //\r\n  // description: 게시물 수정하기 : '/board/update/:boardNumber' - BoardUpdate //\r\n  return (\r\n    <Routes>\r\n      <Route element={<Container />}>\r\n        <Route path={MAIN_PATH()} element={<Main />} />\r\n        <Route path={AUTH_PATH()} element={<Authentication />} />\r\n        <Route path={SEARCH_PATH(\":searchWord\")} element={<Search />} />\r\n        <Route path={USER_PATH(\":userEmail\")} element={<UserP />} />\r\n        <Route path=\"/board\">\r\n          <Route path=\"write\" element={<BoardWrite />} />\r\n          <Route path=\"detail/:boardNumber\" element={<BoardDetail />} />\r\n          <Route path=\"update/:boardNumber\" element={<BoardUpdate />} />\r\n        </Route>\r\n        <Route path=\"*\" element={<h1>404 Not Found</h1>} />\r\n      </Route>\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SACEC,SAAS,EAKTC,SAAS,EACTC,WAAW,EACXC,SAAS,QAKJ,UAAU;AACjB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,iBAAiB,QAAQ,QAAQ;AAC1C,SAASC,oBAAoB,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK5C;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM;IAAEC,YAAY;IAAEC;EAAe,CAAC,GAAGP,iBAAiB,CAAC,CAAC;EAC5D;EACA,MAAM,CAACQ,OAAO,EAAEC,SAAS,CAAC,GAAGV,UAAU,CAAC,CAAC;;EAEzC;EACA,MAAMW,qBAAqB,GACzBC,YAA2D,IACxD;IACH,IAAI,CAACA,YAAY,EAAE;IACnB,MAAM;MAAEC;IAAK,CAAC,GAAGD,YAAY;IAC7B,IAAIC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,EAAE;MACpDL,cAAc,CAAC,CAAC;MAChB;IACF;IACA,MAAMM,SAAe,GAAG;MAAE,GAAIF;IAA0C,CAAC;IACzEL,YAAY,CAACO,SAAS,CAAC;EACzB,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,OAAO,CAACM,WAAW,EAAE;MACxBP,cAAc,CAAC,CAAC;MAChB;IACF;IACAN,oBAAoB,CAACO,OAAO,CAACM,WAAW,CAAC,CAACC,IAAI,CAACL,qBAAqB,CAAC;EACvE,CAAC,EAAE,CAACF,OAAO,CAACM,WAAW,CAAC,CAAC;;EAEzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEX,OAAA,CAAClB,MAAM;IAAA+B,QAAA,eACLb,OAAA,CAACnB,KAAK;MAACiC,OAAO,eAAEd,OAAA,CAACV,SAAS;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAAL,QAAA,gBAC5Bb,OAAA,CAACnB,KAAK;QAACsC,IAAI,EAAE3B,SAAS,CAAC,CAAE;QAACsB,OAAO,eAAEd,OAAA,CAACjB,IAAI;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/ClB,OAAA,CAACnB,KAAK;QAACsC,IAAI,EAAE5B,SAAS,CAAC,CAAE;QAACuB,OAAO,eAAEd,OAAA,CAAChB,cAAc;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDlB,OAAA,CAACnB,KAAK;QAACsC,IAAI,EAAE1B,WAAW,CAAC,aAAa,CAAE;QAACqB,OAAO,eAAEd,OAAA,CAACf,MAAM;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChElB,OAAA,CAACnB,KAAK;QAACsC,IAAI,EAAEzB,SAAS,CAAC,YAAY,CAAE;QAACoB,OAAO,eAAEd,OAAA,CAACd,KAAK;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DlB,OAAA,CAACnB,KAAK;QAACsC,IAAI,EAAC,QAAQ;QAAAN,QAAA,gBAClBb,OAAA,CAACnB,KAAK;UAACsC,IAAI,EAAC,OAAO;UAACL,OAAO,eAAEd,OAAA,CAACb,UAAU;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/ClB,OAAA,CAACnB,KAAK;UAACsC,IAAI,EAAC,qBAAqB;UAACL,OAAO,eAAEd,OAAA,CAACX,WAAW;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9DlB,OAAA,CAACnB,KAAK;UAACsC,IAAI,EAAC,qBAAqB;UAACL,OAAO,eAAEd,OAAA,CAACZ,WAAW;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACRlB,OAAA,CAACnB,KAAK;QAACsC,IAAI,EAAC,GAAG;QAACL,OAAO,eAAEd,OAAA;UAAAa,QAAA,EAAI;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAAChB,EAAA,CArDQD,GAAG;EAAA,QAE+BJ,iBAAiB,EAE7BD,UAAU;AAAA;AAAAwB,EAAA,GAJhCnB,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}